on:
  push:
    tags:
      - '*'
permissions: write-all
name: Release

jobs:

  step1:
    strategy:
      matrix:
        go-version: [1.20.x]
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:

    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup
      uses: actions/setup-go@v4
      with:   
       go-version: ${{ matrix.go-version }}
    - name: Modules
      run: go mod tidy


    - name: Build mac
      if: matrix.os == 'macos-latest'
      run: go build -o ./artifacts/gogetit-${{ runner.os }}
    - name: Build windows
      if: matrix.os == 'windows-latest'
      run: go build -ldflags -H=windowsgui -o ./artifacts/gogetit-${{ runner.os }}.exe
    - name: Build linux
      if: matrix.os == 'ubuntu-latest'
      run: |
          sudo apt install gcc pkg-config libwayland-dev libx11-dev libx11-xcb-dev libxkbcommon-x11-dev libgles2-mesa-dev libegl1-mesa-dev libffi-dev libxcursor-dev libvulkan-dev
          go build -o ./artifacts/gogetit-${{ runner.os }}


    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
       name: artifacts
       path: artifacts
       
  step2:
   needs: step1
   runs-on: ubuntu-latest
   steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: artifacts
      - name: Send artifacts
        uses: xresloader/upload-to-github-release@v1
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "artifacts/*"
          tags: true